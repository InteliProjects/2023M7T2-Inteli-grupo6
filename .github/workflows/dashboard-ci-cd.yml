name: CI - Dashboard
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI_Dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Create .env file (Backend)
        working-directory: ./src/backend
        run: |
          echo "JWT_SECRET=$JWT_SECRET" > .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "BUCKET_FILE=$BUCKET_FILE" >> .env
          echo "ACCESS_KEY_ID=$ACCESS_KEY_ID" >> .env
          echo "SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY" >> .env
          echo "SESSION_TOKEN=$SESSION_TOKEN" >> .env
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BUCKET_FILE: ${{ secrets.BUCKET_FILE }}
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}

      - name: Create .env.local file (Frontend)
        working-directory: ./src/frontend
        run: |
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" > .env.local
          echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.local
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env.local
          echo "NEXT_PUBLIC_NODE_ENV=$NEXT_PUBLIC_NODE_ENV" >> .env.local
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}

      - name: Configure Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Test the Frontend container
        working-directory: ./src/
        run: docker-compose up -d frontend

      - name: Test the Backend container
        working-directory: ./src/
        run: docker-compose up -d backend

      - name: Clean up Docker Compose
        working-directory: ./src/
        run: docker-compose -f docker-compose.yml down -v

  CD_Dashboard:
    runs-on: ubuntu-latest
    needs: [CI_Dashboard]
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Check the files
        run: |
          ls -la

      - name: Set the CHMOD
        run: |
          chmod 400 ./kp-back-grupo6.pem
          ls -la

      - name: Create .env file on EC2 (Backend)
        working-directory: ./src/backend
        run: |
          echo "JWT_SECRET=$JWT_SECRET" > .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "BUCKET_FILE=$BUCKET_FILE" >> .env
          echo "ACCESS_KEY_ID=$ACCESS_KEY_ID" >> .env
          echo "SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY" >> .env
          echo "SESSION_TOKEN=$SESSION_TOKEN" >> .env
          ls -la

          scp -i ./../../kp-back-grupo6.pem -o StrictHostKeyChecking=no ./.env ubuntu@18.205.12.200:grupo6/src/backend/
          
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BUCKET_FILE: ${{ secrets.BUCKET_FILE }}
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}

      - name: Create .env.local file on EC2 (Frontend)
        working-directory: ./src/frontend
        run: |
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" > .env.local
          echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.local
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env.local
          echo "NEXT_PUBLIC_NODE_ENV=$NEXT_PUBLIC_NODE_ENV" >> .env.local
          ls -la

          scp -i ./../../kp-back-grupo6.pem -o StrictHostKeyChecking=no ./.env.local ubuntu@18.205.12.200:grupo6/src/frontend/

        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}

      - name: Down Docker Compose on EC2
        run: |
          ls -la
          ssh_command="${{ secrets.SSH_COMMAND_ACCESS_DASHBOARD }}"
          $ssh_command 'ls -la && cd grupo6/src && docker-compose down -v && docker system prune -a --force'

      - name: Update Docker Compose on EC2 (Backend)
        run: |
          ssh_command="${{ secrets.SSH_COMMAND_ACCESS_DASHBOARD }}"
          $ssh_command 'ls -la && cd grupo6/src && git checkout main && git pull origin main'

      - name: Run Container Frontend on EC2
        run: |
          ssh_command="${{ secrets.SSH_COMMAND_ACCESS_DASHBOARD }}"
          $ssh_command 'ls -la && cd grupo6/src && docker-compose up -d frontend'

      - name: Run Container Backend on EC2
        run: |
          ssh_command="${{ secrets.SSH_COMMAND_ACCESS_DASHBOARD }}"
          $ssh_command 'ls -la && cd grupo6/src && docker-compose up -d backend'
  